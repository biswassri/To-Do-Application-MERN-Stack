{"version":3,"sources":["App/todo-container/list-todo/ListTodo.js","App/todo-container/create-todo/CreateTodo.js","App/todo-container/edit-todo/EditTodo.js","App/todo-container/view-todo/ViewTodo.js","App/App.js","reportWebVitals.js","index.js"],"names":["Todo","props","className","todo","status","title","to","_id","TodosList","todoList","state","todos","map","index","fetch","headers","then","response","json","data","setState","style","marginTop","this","Component","CreateTodo","onChangeTodoDescription","e","description","target","value","onChangeTodoStatus","onChangeTodoTitle","onChangeTodoDueDate","due_date","onChangeTodoDueTime","due_time","onSubmit","preventDefault","console","log","newTodo","method","body","JSON","stringify","res","alert","type","onChange","EditTodo","obj","content","match","params","id","history","push","bind","catch","err","name","checked","htmlFor","ViewTodo","App","path","exact","component","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36b8d53f.chunk.js","sourcesContent":["import React , { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './ListTodo.scss'\n\n\nconst Todo = props => (\n    <tr>\n        <td className = { props.todo.status === 'Completed' ? 'completed' : ''}>{props.todo.title}</td>\n        <td className = { props.todo.status === 'Completed' ? 'completed' : ''}>{props.todo.status}</td>\n        <td>\n            <Link to={\"/edit/\" + props.todo._id}>Edit</Link>\n        </td>\n        <td>\n        <Link to={\"/view/\" + props.todo._id}>View</Link>\n        </td>\n    </tr>\n)\n\n\nexport default class TodosList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            todos: []\n        };\n    }\n\n    componentDidMount() {\n        fetch('http://localhost:3000/toDoList/',\n        {\n            headers:{\n                'Content-Type' : 'application/json',\n                'Accept' : 'application/json'\n            }\n        })\n            .then( response => response.json())\n            .then( data => this.setState({\n                    todos: data\n                })\n            );\n    }\n\n    todoList = () => this.state.todos.map(\n        (todo, index) => <Todo todo={todo} key={index} />\n    )\n    \n\n    render() {\n        return (\n            <div>\n                <h3>Todos List</h3>\n                <table className=\"table table-striped\" style={{ marginTop: 20}}>\n                    <thead>\n                        <tr>\n                            <th>Description</th>\n                            <th>Status</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        { this.todoList() }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import React , { Component } from 'react';\nimport './CreateTodo.scss';\n\nexport default class CreateTodo extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            title: '',\n            description: '',\n            due_date:'',\n            due_time:'',\n            status: 'Pending'\n        }\n    }\n\n    onChangeTodoDescription = e => {\n        this.setState({ description: e.target.value });\n    }\n\n    onChangeTodoStatus = e => {\n        this.setState({ status: e.target.value });\n    }\n\n    onChangeTodoTitle = e => {\n        this.setState({ title: e.target.value });\n    }\n\n    onChangeTodoDueDate = e => {\n        this.setState({ due_date: e.target.value});\n    }\n\n    onChangeTodoDueTime = e => {\n        this.setState({ due_time: e.target.value});\n    }\n    onSubmit = e => {\n        e.preventDefault();\n\n        \n        console.log('Form submitted:');\n        console.log(`Todo Title: ${this.state.title}`);\n        console.log(`Todo description: ${this.state.description}`);\n        console.log(`Todo Status: ${this.state.status}`);\n        console.log(`Todo Date: ${this.state.due_date}`);\n        console.log(`Todo Time: ${this.state.due_time}`);\n\n        const newTodo = {\n            description: this.state.description,\n            title: this.state.title,\n            status: this.state.status,\n            due_date: this.state.due_date,\n            due_time: this.state.due_time\n        }\n\n        fetch('http://localhost:3000/toDoList/',{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body : JSON.stringify(newTodo)\n        })\n            .then(response => response.json())\n            .then( res => console.log(res.data));\n        \n        alert(\"Successfully added a TodoItem\");\n        \n        this.setState({\n            description: '',\n            title: '',\n            status: 'Pending',\n            due_date : '',\n            due_time : ''\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>Create New Task</h3>\n                <form onSubmit = {this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Title: </label>\n                        <input type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.title}\n                                onChange={this.onChangeTodoTitle}\n                                />\n\n                    </div>\n                    <div className=\"form-group\">\n                        <label>description: </label>\n                        <input type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.description}\n                                onChange={this.onChangeTodoDescription}\n                                />\n                                \n                    </div>\n                    <div className=\"form-group\">\n                        <label>Due Date: </label>\n                        <input type=\"date\"\n                                className=\"form-control\"\n                                value={this.state.due_date}\n                                onChange={this.onChangeTodoDueDate}\n                                />\n                                \n                    </div>\n                    <div className=\"form-group\">\n                        <label>Due Time: </label>\n                        <input type=\"time\"\n                                className=\"form-control\"\n                                value={this.state.due_time}\n                                onChange={this.onChangeTodoDueTime}\n                                />\n                                \n                    </div>\n                   \n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Create Todo\" className=\"btn btn-primary\" />\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n","import React , { Component } from 'react';\nimport axios from 'axios';\n\nexport default class EditTodo extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            content: '',\n            status: 'Pending'\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        fetch('http://localhost:3000/toDoList/' + this.props.match.params.id,\n        {\n            headers:{\n                'Content-Type' : 'application/json',\n                'Accept' : 'application/json'\n            }\n        })\n            .then(response => response.json())\n            .then( data => {\n                this.setState({\n                    title: data.title,\n                    content: data.content,\n                    status: data.status\n                })\n            })\n            .catch( err => console.log(err));\n    }\n\n    onChangeTodoDescription = e => {\n        this.setState({ \n            description: e.target.value });\n    }\n\n    onChangeTodoStatus = e => {\n        this.setState({ status: (this.state.status === 'Completed' ? 'Pending' : 'Completed')});\n    }\n    onChangeTodoTitle = e => {\n        this.setState({ title: e.target.value });\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        const obj = {\n            content: this.state.content,\n            title: this.state.title,\n            status: this.state.status\n        };\n        console.log(obj);\n        fetch('http://localhost:3000/toDoList/' + this.props.match.params.id,{\n            method : 'PUT',\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body : JSON.stringify(obj)\n          })\n            .then( response => response.json())\n            .then(res => console.log(res.data));\n        \n        alert(\"Successfully edited TodoItem\");\n        this.props.history.push('/');\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>Update Todo</h3>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Title: </label>\n                        <input type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.title}\n                                onChange={this.onChangeTodoTitle}\n                                />\n\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Description: </label>\n                        <input type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.description}\n                                onChange={this.onChangeTodoDescription}\n                                />\n                                \n                    </div>\n                    \n                    <div className=\"form-check\">\n                            <input  type=\"checkbox\"\n                                    className=\"form-check-input\"\n                                    id=\"completedCheckbox\"\n                                    name=\"completedCheckbox\"\n                                    onChange={this.onChangeTodoStatus}\n                                    checked={this.state.status === \"Completed\"}\n                                    value={this.state.status === \"Completed\"}\n                                    />\n                            <label className=\"form-check-label\" htmlFor=\"completedCheckbox\">\n                                Completed\n                            </label>\n                        </div>\n                        <br />\n                        <div className=\"form-group\">\n                            <input type=\"submit\" value=\"Update Todo\" className=\"btn btn-primary\" />\n                        </div>\n                </form>\n            </div>\n        )\n    }\n}\n","import React , { Component } from 'react';\n\n\nconst Todo = props => (\n    <tr>\n        <td >{props.todo.title}</td>\n        <td >{props.todo.description}</td>\n        <td >{props.todo.due_date}</td>\n        <td >{props.todo.due_time}</td>\n        <td >{props.todo.status}</td>\n    </tr>\n)\n\n\nexport default class ViewTodo extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            content: '',\n            due_date:'',\n            due_time:'',\n            status: 'Pending'\n        }\n    }\n\n    componentDidMount() {\n        fetch('http://localhost:3000/toDoList/' + this.props.match.params.id,{\n            headers:{\n                'Content-Type' : 'application/json',\n                'Accept' : 'application/json'\n            }\n        })\n        .then( response => response.json())\n        .then(data => {\n            this.setState({\n                title: data.title,\n                description: data.description,\n                status: data.status,\n                due_date: data.due_date,\n                due_time: data.due_time\n            })\n        })\n        .catch( err => console.log(err));\n    }\n\n    todoList = () => this.state.todos.map(\n        (todo, index) => <Todo todo={todo} key={index} />\n    )\n    \n\n    render() {\n        return (\n            <div>\n                <h3>Todos List</h3>\n                <table className=\"table table-striped\" style={{ marginTop: 20}}>\n                    <thead>\n                        <tr>\n                            <th>Title</th>\n                            <th>Description</th>\n                            <th>Due Date</th>\n                            <th>Due Time</th>\n                            <th>Status</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>{this.state.title}</td>\n                            <td>{this.state.description}</td>\n                            <td>{this.state.due_date}</td>\n                            <td>{this.state.due_time}</td>\n                            <td>{this.state.status}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","\nimport './App.scss';\nimport React from 'react';\n\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nimport TodosList from './todo-container/list-todo/ListTodo';\nimport CreateTodo from './todo-container/create-todo/CreateTodo';\nimport EditTodo from './todo-container/edit-todo/EditTodo';\nimport ViewTodo from './todo-container/view-todo/ViewTodo';\n\nclass App extends React.Component {\n  \n  render(){\n    return (\n      <Router>\n        <div className=\"container\">\n          \n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <Link to=\"/\" className=\"App-link\">To-Do Application</Link> \n            <div className=\"collapse navbar-collapse\" id=\"myNavbar\">\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"navbar-item\">\n                  <Link to=\"/\" className=\"nav-link\">To-Do Items</Link>\n                </li>\n                <li className=\"navbar-item\">\n                  <Link to=\"/create\" className=\"nav-link\">Create Task</Link>\n                </li>\n              </ul>\n            </div>\n\n          </nav>\n\n          <Route path='/' exact component={TodosList} />\n          <Route path='/edit/:id' component={EditTodo} /> \n          <Route path='/create' component={CreateTodo} />\n          <Route path='/view/:id' component={ViewTodo} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}