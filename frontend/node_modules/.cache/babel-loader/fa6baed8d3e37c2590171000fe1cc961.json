{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/srijonibiswas/Desktop/Fall-2020/Web Design/Assignment9/assignment-9-biswassri/todoapp/frontend/src/App/todo-container/edit-todo/EditTodo.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nexport default class EditTodo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeTodoDescription = e => {\n      this.setState({\n        description: e.target.value\n      });\n    };\n\n    this.onChangeTodoStatus = e => {\n      this.setState({\n        status: this.state.status === 'Completed' ? 'Pending' : 'Completed'\n      });\n    };\n\n    this.onChangeTodoTitle = e => {\n      this.setState({\n        title: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const obj = {\n        description: this.state.description,\n        title: this.state.title,\n        status: this.state.status\n      };\n      console.log(obj);\n      /**\n       * patching the new value to the backend along with the id\n       */\n\n      fetch('http://localhost:3000/toDoList/' + this.props.match.params.id, {\n        method: 'PUT',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(obj)\n      }).then(response => response.json()).then(res => console.log(res.data));\n      alert(\"Successfully edited TodoItem\");\n      this.props.history.push('/');\n    };\n\n    this.state = {\n      title: '',\n      content: '',\n      status: 'Pending'\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  /**\n   * Editing individual To-Do tasks\n   */\n\n\n  componentDidMount() {\n    //Fetching Id of the task\n    fetch('http://localhost:3000/toDoList/' + this.props.match.params.id, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      this.setState({\n        title: data.title,\n        description: data.description,\n        status: data.status\n      });\n    }).catch(err => console.log(err));\n  } //Setting the states to the new values\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Update Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: this.state.title,\n            onChange: this.onChangeTodoTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: this.state.description,\n            onChange: this.onChangeTodoDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: \"completedCheckbox\",\n            name: \"completedCheckbox\",\n            onChange: this.onChangeTodoStatus,\n            checked: this.state.status === \"Completed\",\n            value: this.state.status === \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: \"completedCheckbox\",\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Update Todo\",\n            className: \"btn btn-primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/srijonibiswas/Desktop/Fall-2020/Web Design/Assignment9/assignment-9-biswassri/todoapp/frontend/src/App/todo-container/edit-todo/EditTodo.js"],"names":["React","Component","axios","EditTodo","constructor","props","onChangeTodoDescription","e","setState","description","target","value","onChangeTodoStatus","status","state","onChangeTodoTitle","title","onSubmit","preventDefault","obj","console","log","fetch","match","params","id","method","headers","body","JSON","stringify","then","response","json","res","data","alert","history","push","content","bind","componentDidMount","catch","err","render"],"mappings":"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","sourcesContent":["import React , { Component } from 'react';\nimport axios from 'axios';\n\nexport default class EditTodo extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            content: '',\n            status: 'Pending'\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    /**\n     * Editing individual To-Do tasks\n     */\n    componentDidMount() {\n        //Fetching Id of the task\n        fetch('http://localhost:3000/toDoList/' + this.props.match.params.id,\n        {\n            headers:{\n                'Content-Type' : 'application/json',\n                'Accept' : 'application/json'\n            }\n        })\n            .then(response => response.json())\n            .then( data => {\n                this.setState({\n                    title: data.title,\n                    description: data.description,\n                    status: data.status\n                })\n            })\n            .catch( err => console.log(err));\n    }\n    //Setting the states to the new values\n    onChangeTodoDescription = e => {\n        this.setState({ \n            description: e.target.value });\n    }\n\n    onChangeTodoStatus = e => {\n        this.setState({ status: (this.state.status === 'Completed' ? 'Pending' : 'Completed')});\n    }\n    onChangeTodoTitle = e => {\n        this.setState({ title: e.target.value });\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        const obj = {\n            description: this.state.description,\n            title: this.state.title,\n            status: this.state.status\n        };\n        console.log(obj);\n        /**\n         * patching the new value to the backend along with the id\n         */\n        fetch('http://localhost:3000/toDoList/' + this.props.match.params.id,{\n            method : 'PUT',\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body : JSON.stringify(obj)\n          })\n            .then( response => response.json())\n            .then(res => console.log(res.data));\n        \n        alert(\"Successfully edited TodoItem\");\n        this.props.history.push('/');\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>Update Todo</h3>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Title: </label>\n                        <input type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.title}\n                                onChange={this.onChangeTodoTitle}\n                                />\n\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Description: </label>\n                        <input type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.description}\n                                onChange={this.onChangeTodoDescription}\n                                />\n                                \n                    </div>\n                    \n                    <div className=\"form-check\">\n                            <input  type=\"checkbox\"\n                                    className=\"form-check-input\"\n                                    id=\"completedCheckbox\"\n                                    name=\"completedCheckbox\"\n                                    onChange={this.onChangeTodoStatus}\n                                    checked={this.state.status === \"Completed\"}\n                                    value={this.state.status === \"Completed\"}\n                                    />\n                            <label className=\"form-check-label\" htmlFor=\"completedCheckbox\">\n                                Completed\n                            </label>\n                        </div>\n                        <br />\n                        <div className=\"form-group\">\n                            <input type=\"submit\" value=\"Update Todo\" className=\"btn btn-primary\" />\n                        </div>\n                </form>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}