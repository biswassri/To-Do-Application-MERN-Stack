{"ast":null,"code":"import _classCallCheck from\"/Users/srijonibiswas/Desktop/Fall-2020/Web Design/Assignment9/assignment-9-biswassri/todoapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/srijonibiswas/Desktop/Fall-2020/Web Design/Assignment9/assignment-9-biswassri/todoapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/srijonibiswas/Desktop/Fall-2020/Web Design/Assignment9/assignment-9-biswassri/todoapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/srijonibiswas/Desktop/Fall-2020/Web Design/Assignment9/assignment-9-biswassri/todoapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/srijonibiswas/Desktop/Fall-2020/Web Design/Assignment9/assignment-9-biswassri/todoapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{Component}from'react';import axios from'axios';var EditTodo=/*#__PURE__*/function(_Component){_inherits(EditTodo,_Component);var _super=_createSuper(EditTodo);function EditTodo(props){var _this;_classCallCheck(this,EditTodo);_this=_super.call(this,props);_this.onChangeTodoDescription=function(e){_this.setState({description:e.target.value});};_this.onChangeTodoStatus=function(e){_this.setState({status:_this.state.status==='Completed'?'Pending':'Completed'});};_this.onChangeTodoTitle=function(e){_this.setState({title:e.target.value});};_this.onSubmit=function(e){e.preventDefault();var obj={description:_this.state.description,title:_this.state.title,status:_this.state.status};console.log(obj);fetch('http://localhost:5000/api/todo/'+_this.props.match.params.id,{method:'PUT',headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(obj)}).then(function(response){return response.json();}).then(function(res){return console.log(res.data);});alert(\"Successfully edited TodoItem\");_this.props.history.push('/');};_this.state={title:'',description:'',status:'Pending'};_this.onSubmit=_this.onSubmit.bind(_assertThisInitialized(_this));return _this;}_createClass(EditTodo,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;fetch('http://localhost:3000/toDoList/'+this.props.match.params.id,{headers:{'Content-Type':'application/json','Accept':'application/json'}}).then(function(response){return response.json();}).then(function(data){_this2.setState({title:data.title,description:data.description,status:data.status});}).catch(function(err){return console.log(err);});}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Update Todo\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:this.onSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Title: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",value:this.state.title,onChange:this.onChangeTodoTitle})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Description: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",value:this.state.description,onChange:this.onChangeTodoDescription})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-check\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:\"completedCheckbox\",name:\"completedCheckbox\",onChange:this.onChangeTodoStatus,checked:this.state.status===\"Completed\",value:this.state.status===\"Completed\"}),/*#__PURE__*/_jsx(\"label\",{className:\"form-check-label\",htmlFor:\"completedCheckbox\",children:\"Completed\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Update Todo\",className:\"btn btn-primary\"})})]})]});}}]);return EditTodo;}(Component);export{EditTodo as default};","map":{"version":3,"sources":["/Users/srijonibiswas/Desktop/Fall-2020/Web Design/Assignment9/assignment-9-biswassri/todoapp/client/src/App/todo-container/edit-todo/EditTodo.js"],"names":["React","Component","axios","EditTodo","props","onChangeTodoDescription","e","setState","description","target","value","onChangeTodoStatus","status","state","onChangeTodoTitle","title","onSubmit","preventDefault","obj","console","log","fetch","match","params","id","method","headers","body","JSON","stringify","then","response","json","res","data","alert","history","push","bind","catch","err"],"mappings":"0pCAAA,MAAOA,CAAAA,KAAP,EAAiBC,SAAjB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,GAEqBC,CAAAA,Q,oGAEjB,kBAAYC,KAAZ,CAAmB,0CACf,uBAAMA,KAAN,EADe,MA6BnBC,uBA7BmB,CA6BO,SAAAC,CAAC,CAAI,CAC3B,MAAKC,QAAL,CAAc,CACVC,WAAW,CAAEF,CAAC,CAACG,MAAF,CAASC,KADZ,CAAd,EAEH,CAhCkB,OAkCnBC,kBAlCmB,CAkCE,SAAAL,CAAC,CAAI,CACtB,MAAKC,QAAL,CAAc,CAAEK,MAAM,CAAG,MAAKC,KAAL,CAAWD,MAAX,GAAsB,WAAtB,CAAoC,SAApC,CAAgD,WAA3D,CAAd,EACH,CApCkB,OAqCnBE,iBArCmB,CAqCC,SAAAR,CAAC,CAAI,CACrB,MAAKC,QAAL,CAAc,CAAEQ,KAAK,CAAET,CAAC,CAACG,MAAF,CAASC,KAAlB,CAAd,EACH,CAvCkB,OAyCnBM,QAzCmB,CAyCR,SAACV,CAAD,CAAO,CACdA,CAAC,CAACW,cAAF,GACA,GAAMC,CAAAA,GAAG,CAAG,CACRV,WAAW,CAAE,MAAKK,KAAL,CAAWL,WADhB,CAERO,KAAK,CAAE,MAAKF,KAAL,CAAWE,KAFV,CAGRH,MAAM,CAAE,MAAKC,KAAL,CAAWD,MAHX,CAAZ,CAKAO,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACAG,KAAK,CAAC,kCAAoC,MAAKjB,KAAL,CAAWkB,KAAX,CAAiBC,MAAjB,CAAwBC,EAA7D,CAAgE,CACjEC,MAAM,CAAG,KADwD,CAEjEC,OAAO,CAAE,CACP,eAAgB,kBADT,CAFwD,CAKjEC,IAAI,CAAGC,IAAI,CAACC,SAAL,CAAeX,GAAf,CAL0D,CAAhE,CAAL,CAOKY,IAPL,CAOW,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EAPnB,EAQKF,IARL,CAQU,SAAAG,GAAG,QAAId,CAAAA,OAAO,CAACC,GAAR,CAAYa,GAAG,CAACC,IAAhB,CAAJ,EARb,EAUAC,KAAK,CAAC,8BAAD,CAAL,CACA,MAAK/B,KAAL,CAAWgC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB,EACH,CA7DkB,CAEf,MAAKxB,KAAL,CAAa,CACTE,KAAK,CAAE,EADE,CAETP,WAAW,CAAE,EAFJ,CAGTI,MAAM,CAAE,SAHC,CAAb,CAKA,MAAKI,QAAL,CAAgB,MAAKA,QAAL,CAAcsB,IAAd,+BAAhB,CAPe,aAQlB,C,kFAEmB,iBAChBjB,KAAK,CAAC,kCAAoC,KAAKjB,KAAL,CAAWkB,KAAX,CAAiBC,MAAjB,CAAwBC,EAA7D,CACL,CACIE,OAAO,CAAC,CACJ,eAAiB,kBADb,CAEJ,SAAW,kBAFP,CADZ,CADK,CAAL,CAOKI,IAPL,CAOU,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EAPlB,EAQKF,IARL,CAQW,SAAAI,IAAI,CAAI,CACX,MAAI,CAAC3B,QAAL,CAAc,CACVQ,KAAK,CAAEmB,IAAI,CAACnB,KADF,CAEVP,WAAW,CAAE0B,IAAI,CAAC1B,WAFR,CAGVI,MAAM,CAAEsB,IAAI,CAACtB,MAHH,CAAd,EAKH,CAdL,EAeK2B,KAfL,CAeY,SAAAC,GAAG,QAAIrB,CAAAA,OAAO,CAACC,GAAR,CAAYoB,GAAZ,CAAJ,EAff,EAgBH,C,uCAoCQ,CACL,mBACI,oCACI,mCADJ,cAEI,cAAM,QAAQ,CAAE,KAAKxB,QAArB,wBACI,aAAK,SAAS,CAAC,YAAf,wBACI,kCADJ,cAEI,cAAO,IAAI,CAAC,MAAZ,CACQ,SAAS,CAAC,cADlB,CAEQ,KAAK,CAAE,KAAKH,KAAL,CAAWE,KAF1B,CAGQ,QAAQ,CAAE,KAAKD,iBAHvB,EAFJ,GADJ,cAUI,aAAK,SAAS,CAAC,YAAf,wBACI,wCADJ,cAEI,cAAO,IAAI,CAAC,MAAZ,CACQ,SAAS,CAAC,cADlB,CAEQ,KAAK,CAAE,KAAKD,KAAL,CAAWL,WAF1B,CAGQ,QAAQ,CAAE,KAAKH,uBAHvB,EAFJ,GAVJ,cAoBI,aAAK,SAAS,CAAC,YAAf,wBACQ,cAAQ,IAAI,CAAC,UAAb,CACQ,SAAS,CAAC,kBADlB,CAEQ,EAAE,CAAC,mBAFX,CAGQ,IAAI,CAAC,mBAHb,CAIQ,QAAQ,CAAE,KAAKM,kBAJvB,CAKQ,OAAO,CAAE,KAAKE,KAAL,CAAWD,MAAX,GAAsB,WALvC,CAMQ,KAAK,CAAE,KAAKC,KAAL,CAAWD,MAAX,GAAsB,WANrC,EADR,cASQ,cAAO,SAAS,CAAC,kBAAjB,CAAoC,OAAO,CAAC,mBAA5C,uBATR,GApBJ,cAiCQ,aAjCR,cAkCQ,YAAK,SAAS,CAAC,YAAf,uBACI,cAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,CAAC,aAA3B,CAAyC,SAAS,CAAC,iBAAnD,EADJ,EAlCR,GAFJ,GADJ,CA2CH,C,sBA7GiCX,S,SAAjBE,Q","sourcesContent":["import React , { Component } from 'react';\nimport axios from 'axios';\n\nexport default class EditTodo extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            description: '',\n            status: 'Pending'\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        fetch('http://localhost:3000/toDoList/' + this.props.match.params.id,\n        {\n            headers:{\n                'Content-Type' : 'application/json',\n                'Accept' : 'application/json'\n            }\n        })\n            .then(response => response.json())\n            .then( data => {\n                this.setState({\n                    title: data.title,\n                    description: data.description,\n                    status: data.status\n                })\n            })\n            .catch( err => console.log(err));\n    }\n\n    onChangeTodoDescription = e => {\n        this.setState({ \n            description: e.target.value });\n    }\n\n    onChangeTodoStatus = e => {\n        this.setState({ status: (this.state.status === 'Completed' ? 'Pending' : 'Completed')});\n    }\n    onChangeTodoTitle = e => {\n        this.setState({ title: e.target.value });\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        const obj = {\n            description: this.state.description,\n            title: this.state.title,\n            status: this.state.status\n        };\n        console.log(obj);\n        fetch('http://localhost:5000/api/todo/' + this.props.match.params.id,{\n            method : 'PUT',\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body : JSON.stringify(obj)\n          })\n            .then( response => response.json())\n            .then(res => console.log(res.data));\n        \n        alert(\"Successfully edited TodoItem\");\n        this.props.history.push('/');\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>Update Todo</h3>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Title: </label>\n                        <input type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.title}\n                                onChange={this.onChangeTodoTitle}\n                                />\n\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Description: </label>\n                        <input type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.description}\n                                onChange={this.onChangeTodoDescription}\n                                />\n                                \n                    </div>\n                    \n                    <div className=\"form-check\">\n                            <input  type=\"checkbox\"\n                                    className=\"form-check-input\"\n                                    id=\"completedCheckbox\"\n                                    name=\"completedCheckbox\"\n                                    onChange={this.onChangeTodoStatus}\n                                    checked={this.state.status === \"Completed\"}\n                                    value={this.state.status === \"Completed\"}\n                                    />\n                            <label className=\"form-check-label\" htmlFor=\"completedCheckbox\">\n                                Completed\n                            </label>\n                        </div>\n                        <br />\n                        <div className=\"form-group\">\n                            <input type=\"submit\" value=\"Update Todo\" className=\"btn btn-primary\" />\n                        </div>\n                </form>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}