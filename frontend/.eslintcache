[{"/Users/srijonibiswas/Desktop/Fall-2020/Web Design/Assignment9/assignment-9-biswassri/todoapp/frontend/src/index.js":"1","/Users/srijonibiswas/Desktop/Fall-2020/Web Design/Assignment9/assignment-9-biswassri/todoapp/frontend/src/reportWebVitals.js":"2","/Users/srijonibiswas/Desktop/Fall-2020/Web Design/Assignment9/assignment-9-biswassri/todoapp/frontend/src/App/App.js":"3","/Users/srijonibiswas/Desktop/Fall-2020/Web Design/Assignment9/assignment-9-biswassri/todoapp/frontend/src/App/todo-container/view-todo/ViewTodo.js":"4","/Users/srijonibiswas/Desktop/Fall-2020/Web Design/Assignment9/assignment-9-biswassri/todoapp/frontend/src/App/todo-container/list-todo/ListTodo.js":"5","/Users/srijonibiswas/Desktop/Fall-2020/Web Design/Assignment9/assignment-9-biswassri/todoapp/frontend/src/App/todo-container/edit-todo/EditTodo.js":"6","/Users/srijonibiswas/Desktop/Fall-2020/Web Design/Assignment9/assignment-9-biswassri/todoapp/frontend/src/App/todo-container/create-todo/CreateTodo.js":"7"},{"size":462,"mtime":1606625174000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1606437430000,"results":"10","hashOfConfig":"9"},{"size":1415,"mtime":1606890832057,"results":"11","hashOfConfig":"9"},{"size":2272,"mtime":1606592820534,"results":"12","hashOfConfig":"9"},{"size":1882,"mtime":1606595079296,"results":"13","hashOfConfig":"9"},{"size":4215,"mtime":1606594937028,"results":"14","hashOfConfig":"9"},{"size":4325,"mtime":1606890096747,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"cb7n1s",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/srijonibiswas/Desktop/Fall-2020/Web Design/Assignment9/assignment-9-biswassri/todoapp/frontend/src/index.js",[],["33","34"],"/Users/srijonibiswas/Desktop/Fall-2020/Web Design/Assignment9/assignment-9-biswassri/todoapp/frontend/src/reportWebVitals.js",[],"/Users/srijonibiswas/Desktop/Fall-2020/Web Design/Assignment9/assignment-9-biswassri/todoapp/frontend/src/App/App.js",[],"/Users/srijonibiswas/Desktop/Fall-2020/Web Design/Assignment9/assignment-9-biswassri/todoapp/frontend/src/App/todo-container/view-todo/ViewTodo.js",[],"/Users/srijonibiswas/Desktop/Fall-2020/Web Design/Assignment9/assignment-9-biswassri/todoapp/frontend/src/App/todo-container/list-todo/ListTodo.js",[],"/Users/srijonibiswas/Desktop/Fall-2020/Web Design/Assignment9/assignment-9-biswassri/todoapp/frontend/src/App/todo-container/edit-todo/EditTodo.js",["35"],"import React , { Component } from 'react';\nimport axios from 'axios';\n\nexport default class EditTodo extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            content: '',\n            status: 'Pending'\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        fetch('http://localhost:3000/toDoList/' + this.props.match.params.id,\n        {\n            headers:{\n                'Content-Type' : 'application/json',\n                'Accept' : 'application/json'\n            }\n        })\n            .then(response => response.json())\n            .then( data => {\n                this.setState({\n                    title: data.title,\n                    content: data.content,\n                    status: data.status\n                })\n            })\n            .catch( err => console.log(err));\n    }\n\n    onChangeTodoDescription = e => {\n        this.setState({ \n            description: e.target.value });\n    }\n\n    onChangeTodoStatus = e => {\n        this.setState({ status: (this.state.status === 'Completed' ? 'Pending' : 'Completed')});\n    }\n    onChangeTodoTitle = e => {\n        this.setState({ title: e.target.value });\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        const obj = {\n            content: this.state.content,\n            title: this.state.title,\n            status: this.state.status\n        };\n        console.log(obj);\n        fetch('http://localhost:3000/toDoList/' + this.props.match.params.id,{\n            method : 'PUT',\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body : JSON.stringify(obj)\n          })\n            .then( response => response.json())\n            .then(res => console.log(res.data));\n        \n        alert(\"Successfully edited TodoItem\");\n        this.props.history.push('/');\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>Update Todo</h3>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Title: </label>\n                        <input type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.title}\n                                onChange={this.onChangeTodoTitle}\n                                />\n\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Description: </label>\n                        <input type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.description}\n                                onChange={this.onChangeTodoDescription}\n                                />\n                                \n                    </div>\n                    \n                    <div className=\"form-check\">\n                            <input  type=\"checkbox\"\n                                    className=\"form-check-input\"\n                                    id=\"completedCheckbox\"\n                                    name=\"completedCheckbox\"\n                                    onChange={this.onChangeTodoStatus}\n                                    checked={this.state.status === \"Completed\"}\n                                    value={this.state.status === \"Completed\"}\n                                    />\n                            <label className=\"form-check-label\" htmlFor=\"completedCheckbox\">\n                                Completed\n                            </label>\n                        </div>\n                        <br />\n                        <div className=\"form-group\">\n                            <input type=\"submit\" value=\"Update Todo\" className=\"btn btn-primary\" />\n                        </div>\n                </form>\n            </div>\n        )\n    }\n}\n","/Users/srijonibiswas/Desktop/Fall-2020/Web Design/Assignment9/assignment-9-biswassri/todoapp/frontend/src/App/todo-container/create-todo/CreateTodo.js",[],["36","37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":2,"column":8,"nodeType":"44","messageId":"45","endLine":2,"endColumn":13},{"ruleId":"38","replacedBy":"46"},{"ruleId":"40","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar",["48"],["49"],"no-global-assign","no-unsafe-negation"]